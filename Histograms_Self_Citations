# Base R Citation Analysis Histograms - Fixed Version
# No additional packages required

# Read the CSV file from Downloads folder
file_path <- "C:/Users/mueha/Downloads/Paper_3_Self_Citations.csv"

# Read the data
data <- read.csv(file_path, stringsAsFactors = FALSE)

# Get the column names (paper titles) - excluding the first empty column
paper_titles <- colnames(data)[2:ncol(data)]

# Define consistent colors for each metric
total_color <- "#2E86AB"      # Blue for Total References
self_color <- "#A23B72"       # Purple/Pink for Self-Citations  
non_self_color <- "#F18F01"   # Orange for Non-Self-Citations

# Set up the plotting layout: 2 rows, 5 columns with much closer spacing
par(mfrow = c(2, 5), 
    mar = c(6, 4, 1, 1),      # Reduced margins for closer spacing
    oma = c(4, 1, 2, 1),      # Outer margins
    mgp = c(2.5, 0.7, 0))     # Axis label positioning

# Function to create grouped bar charts
create_grouped_histogram <- function(paper_index, title) {
  # Extract the three values for this paper
  total_refs <- as.numeric(data[1, paper_index + 1])      # Total References
  self_cites <- as.numeric(data[2, paper_index + 1])      # Self-Citations
  non_self_cites <- as.numeric(data[3, paper_index + 1])  # Non-Self-Citations
  
  # Create the values and labels
  values <- c(total_refs, self_cites, non_self_cites)
  labels <- c("Total\nCitations", "Self\nCitations", "Non-Self\nCitations")
  colors <- c(total_color, self_color, non_self_color)
  
  # Create bar plot without labels
  bars <- barplot(values, 
                  names.arg = rep("", 3),  # No labels under bars
                  col = colors,
                  border = "white",
                  ylab = "Frequency",
                  xlab = "",  # No x-axis label
                  cex.lab = 0.8,
                  cex.axis = 0.8,
                  las = 1,
                  ylim = c(0, max(values) * 1.1))
  
  # Add subtle grid
  grid(col = "gray90", lty = 1, lwd = 0.5)
  
  # Redraw bars on top of grid
  barplot(values, 
          col = colors,
          border = "white",
          add = TRUE,
          axes = FALSE)
  
  # Use the exact title from the dataset (column names)
  original_title <- paper_titles[paper_index]
  
  # Clean the title by removing any extra dots or underscores and replacing with spaces
  clean_title <- gsub("\\.", " ", original_title)
  clean_title <- gsub("_", " ", clean_title)
  clean_title <- gsub("\\s+", " ", clean_title)  # Remove multiple spaces
  clean_title <- trimws(clean_title)  # Remove leading/trailing whitespace
  
  # Remove 'x' from the beginning of the title if present
  if (substr(clean_title, 1, 1) == "x" || substr(clean_title, 1, 1) == "X") {
    clean_title <- substr(clean_title, 2, nchar(clean_title))
    clean_title <- trimws(clean_title)  # Remove any leading whitespace after removing 'x'
  }
  
  # Split title into appropriate lines to prevent overlapping
  title_words <- strsplit(clean_title, " ")[[1]]
  total_words <- length(title_words)
  
  if (total_words <= 2) {
    # Very short title - put on one line
    mtext(clean_title, side = 1, line = 3, cex = 0.7, font = 2)
  } else if (total_words <= 4) {
    # Short title - put on one line
    mtext(clean_title, side = 1, line = 3, cex = 0.7, font = 2)
  } else if (total_words <= 6) {
    # Medium title - split into two lines
    mid_point <- ceiling(total_words / 2)
    line1 <- paste(title_words[1:mid_point], collapse = " ")
    line2 <- paste(title_words[(mid_point + 1):total_words], collapse = " ")
    
    mtext(line1, side = 1, line = 2.5, cex = 0.7, font = 2)
    mtext(line2, side = 1, line = 3.5, cex = 0.7, font = 2)
  } else {
    # Long title - split into three lines
    words_per_line <- ceiling(total_words / 3)
    line1 <- paste(title_words[1:words_per_line], collapse = " ")
    line2 <- paste(title_words[(words_per_line + 1):(2 * words_per_line)], collapse = " ")
    line3 <- paste(title_words[(2 * words_per_line + 1):total_words], collapse = " ")
    
    mtext(line1, side = 1, line = 2, cex = 0.7, font = 2)
    mtext(line2, side = 1, line = 3, cex = 0.7, font = 2)
    mtext(line3, side = 1, line = 4, cex = 0.7, font = 2)
  }
}

# Generate grouped bar charts for each paper
for (i in 1:length(paper_titles)) {
  create_grouped_histogram(i, paper_titles[i])
}

# Add main title
mtext("Citation Analysis Comparing Self Citations vs Non Self Citations Across Papers", 
      outer = TRUE, cex = 1.1, font = 2, line = 0.5)

# Add legend at the bottom with proper spacing
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = 'n', bty = 'n', xaxt = 'n', yaxt = 'n')
legend("bottom", legend = c("Total Citations", "Self-Citations", "Non-Self-Citations"), 
       fill = c(total_color, self_color, non_self_color), 
       horiz = TRUE, xpd = TRUE, cex = 0.9, bty = 'n')

# Save the plot as PNG with better dimensions
dev.copy(png, "citation_analysis_comparison.png", width = 2000, height = 1200, res = 150)
dev.off()

# Reset plotting parameters
par(mfrow = c(1, 1), mar = c(5, 4, 4, 2), oma = c(0, 0, 0, 0))

# Print detailed analysis
cat("\n=== CITATION ANALYSIS SUMMARY ===\n")
for (i in 1:length(paper_titles)) {
  total_refs <- as.numeric(data[1, i + 1])
  self_cites <- as.numeric(data[2, i + 1])
  non_self_cites <- as.numeric(data[3, i + 1])
  
  self_citation_rate <- round((self_cites / total_refs) * 100, 1)
  
  cat("\n", paper_titles[i], ":\n")
  cat("  Total References:", total_refs, "\n")
  cat("  Self-Citations:", self_cites, "\n")
  cat("  Non-Self-Citations:", non_self_cites, "\n")
  cat("  Self-Citation Rate:", self_citation_rate, "%\n")
}

# Identify papers with highest and lowest self-citation rates
self_citation_rates <- numeric(length(paper_titles))
for (i in 1:length(paper_titles)) {
  total_refs <- as.numeric(data[1, i + 1])
  self_cites <- as.numeric(data[2, i + 1])
  self_citation_rates[i] <- (self_cites / total_refs) * 100
}

highest_self_cite <- which.max(self_citation_rates)
lowest_self_cite <- which.min(self_citation_rates)

cat("\n=== KEY INSIGHTS ===\n")
cat("Highest self-citation rate:", paper_titles[highest_self_cite], 
    "(", round(self_citation_rates[highest_self_cite], 1), "%)\n")
cat("Lowest self-citation rate:", paper_titles[lowest_self_cite], 
    "(", round(self_citation_rates[lowest_self_cite], 1), "%)\n")
cat("Average self-citation rate:", round(mean(self_citation_rates), 1), "%\n")

# Create a legend explanation
cat("\n=== LEGEND ===\n")
cat("Blue bars: Total Citations\n")
cat("Purple/Pink bars: Self-Citations\n")
cat("Orange bars: Non-Self-Citations\n")

cat("\n=== SCRIPT COMPLETED ===\n")
cat("Citation comparison charts saved as 'citation_analysis_comparison.png'\n")
